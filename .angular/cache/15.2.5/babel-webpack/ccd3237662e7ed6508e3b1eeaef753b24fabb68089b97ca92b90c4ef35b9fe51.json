{"ast":null,"code":"import _asyncToGenerator from \"C:/angular/front-app-angular-arielle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ComponentHarness, HarnessPredicate } from '@angular/cdk/testing';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Harness for interacting with a `mat-divider`. */\nclass MatDividerHarness extends ComponentHarness {\n  static with(options = {}) {\n    return new HarnessPredicate(MatDividerHarness, options);\n  }\n  getOrientation() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return (yield _this.host()).getAttribute('aria-orientation');\n    })();\n  }\n  isInset() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return (yield _this2.host()).hasClass('mat-divider-inset');\n    })();\n  }\n}\nMatDividerHarness.hostSelector = '.mat-divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { MatDividerHarness };","map":{"version":3,"names":["ComponentHarness","HarnessPredicate","MatDividerHarness","with","options","getOrientation","host","getAttribute","isInset","hasClass","hostSelector"],"sources":["C:/angular/front-app-angular-arielle/node_modules/@angular/material/fesm2020/divider/testing.mjs"],"sourcesContent":["import { ComponentHarness, HarnessPredicate } from '@angular/cdk/testing';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Harness for interacting with a `mat-divider`. */\nclass MatDividerHarness extends ComponentHarness {\n    static with(options = {}) {\n        return new HarnessPredicate(MatDividerHarness, options);\n    }\n    async getOrientation() {\n        return (await this.host()).getAttribute('aria-orientation');\n    }\n    async isInset() {\n        return (await this.host()).hasClass('mat-divider-inset');\n    }\n}\nMatDividerHarness.hostSelector = '.mat-divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { MatDividerHarness };\n"],"mappings":";AAAA,SAASA,gBAAgB,EAAEC,gBAAgB,QAAQ,sBAAsB;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,SAASF,gBAAgB,CAAC;EAC7C,OAAOG,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACtB,OAAO,IAAIH,gBAAgB,CAACC,iBAAiB,EAAEE,OAAO,CAAC;EAC3D;EACMC,cAAc,GAAG;IAAA;IAAA;MACnB,OAAO,OAAO,KAAI,CAACC,IAAI,EAAE,EAAEC,YAAY,CAAC,kBAAkB,CAAC;IAAC;EAChE;EACMC,OAAO,GAAG;IAAA;IAAA;MACZ,OAAO,OAAO,MAAI,CAACF,IAAI,EAAE,EAAEG,QAAQ,CAAC,mBAAmB,CAAC;IAAC;EAC7D;AACJ;AACAP,iBAAiB,CAACQ,YAAY,GAAG,cAAc;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}